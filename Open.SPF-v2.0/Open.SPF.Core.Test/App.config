<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <sectionGroup name="applicationSettings" type="System.Configuration.ApplicationSettingsGroup, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
      <section name="Open.SPF.Core.Properties.Settings" type="System.Configuration.ClientSettingsSection, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
    </sectionGroup>
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration, Version=4.0.0.0, Culture=neutral, PublicKeyToken=6d32ff45e0ccc69f" />
    <!-- <section name="appPermissionConfiguration" type="Open.SPF.Configuration.ApplicationPermissionConfigurationSettings, Open.SPF.Core" /> -->
  </configSections>
  <applicationSettings>
    <Open.SPF.Core.Properties.Settings>
      <setting name="PermissionCacheTimeoutMinutes" serializeAs="String">
        <value>1</value>
      </setting>
      <setting name="PermissionCacheIsRollingTimeout" serializeAs="String">
        <value>True</value>
      </setting>
    </Open.SPF.Core.Properties.Settings>
  </applicationSettings>
  <unity>

    <typeAliases>
      <!-- Lifetime manager types -->
      <typeAlias alias="singleton" type="Microsoft.Practices.Unity.ContainerControlledLifetimeManager, Microsoft.Practices.Unity, Version=4.0.0.0, Culture=neutral, PublicKeyToken=6d32ff45e0ccc69f" />
      <typeAlias alias="perThread" type="Microsoft.Practices.Unity.PerThreadLifetimeManager, Microsoft.Practices.Unity, Version=4.0.0.0, Culture=neutral, PublicKeyToken=6d32ff45e0ccc69f" />
      <!-- User-defined type aliases -->
      <typeAlias alias="IPermissionManager" type="Open.SPF.Core.IPermissionManager, Open.SPF.Core, Version=1.2.1, Culture=neutral, PublicKeyToken=b4313207536550be" />
      <typeAlias alias="DefaultPermissionManager" type="Open.SPF.Core.PermissionManager, Open.SPF.Core, Version=1.2.1, Culture=neutral, PublicKeyToken=b4313207536550be" />
      <!-- <typeAlias alias="WebPermissionManager" type="Open.SPF.Web.WebPermissionManager, Open.SPF.Web, Version=1.2.1, Culture=neutral, PublicKeyToken=b4313207536550be" /> -->
      <typeAlias alias="WindowsPermissionManager" type="Open.SPF.Windows.ActiveDirectoryPermissionManager, Open.SPF.Core, Version=1.2.1, Culture=neutral, PublicKeyToken=b4313207536550be" />
      <typeAlias alias="IPermissionCache" type="Open.SPF.Core.IPermissionCache, Open.SPF.Core, Version=1.2.1, Culture=neutral, PublicKeyToken=b4313207536550be" />
      <typeAlias alias="DefaultPermissionCache" type="Open.SPF.Core.PermissionCache, Open.SPF.Core, Version=1.2.1, Culture=neutral, PublicKeyToken=b4313207536550be" />
    </typeAliases>

    <containers>
      <container name="defaultContainer">
        <types>
          <!-- Type mapping using aliases -->
          <type type="IPermissionManager" mapTo="DefaultPermissionManager">
            <lifetime type="perThread" />
          </type>
          <type type="IPermissionCache" mapTo="DefaultPermissionCache">
            <lifetime type="perThread" />
          </type>
        </types>
      </container>
    </containers>

  </unity>
  <!--
  <appPermissionConfiguration>
    <corePermissionConfigurationItems>
      <add permissionName="FirstPermission" permittedRole="FirstRole" />
      <add permissionName="SecondPermission" permittedRole="SecondRole" />
      <add permissionName="FirstPermission" permittedRole="ThirdRole" />
      <add permissionName="ThirdPermission" isUnrestricted="true" />
    </corePermissionConfigurationItems>
    <customPermissionConfigurationItems>
      <add permissionName="ForthPermission" ruleType="Open.SPF.Core.Test.TestCustomRules, Open.SPF.Core.Test, Version=1.2.1, Culture=neutral, PublicKeyToken=b4313207536550be" ruleMethod="CustomRuleIsAlwaysAuthorized" argument1="" argument2="" argument3="" argument4="" argument5="" />
      <add permissionName="FifthPermission" ruleType="Open.SPF.Core.Test.TestCustomRules, Open.SPF.Core.Test, Version=1.2.1, Culture=neutral, PublicKeyToken=b4313207536550be" ruleMethod="CustomRuleIsNeverAuthorized" />
      <add permissionName="CheckArgument1" ruleType="Open.SPF.Core.Test.TestCustomRules, Open.SPF.Core.Test, Version=1.2.1, Culture=neutral, PublicKeyToken=b4313207536550be" ruleMethod="CheckArgument1" argument1="Value1" argument2="Value2" />
      <add permissionName="CheckArgument2" ruleType="Open.SPF.Core.Test.TestCustomRules, Open.SPF.Core.Test, Version=1.2.1, Culture=neutral, PublicKeyToken=b4313207536550be" ruleMethod="CheckArgument2" argument1="Value1" argument2="Value2" />
      <add permissionName="CheckArgument3" ruleType="Open.SPF.Core.Test.TestCustomRules, Open.SPF.Core.Test, Version=1.2.1, Culture=neutral, PublicKeyToken=b4313207536550be" ruleMethod="CheckArgument3" argument1="Value1" argument2="Value2" />
      <add permissionName="CheckCustomArgument" ruleType="Open.SPF.Core.Test.TestCustomRules, Open.SPF.Core.Test, Version=1.2.1, Culture=neutral, PublicKeyToken=b4313207536550be" ruleMethod="CheckCustomArgument" argument1="An argument for argument's sake" />
      <add permissionName="CheckCustomObject" ruleType="Open.SPF.Core.Test.TestCustomRules, Open.SPF.Core.Test, Version=1.2.1, Culture=neutral, PublicKeyToken=b4313207536550be" ruleMethod="CheckCustomObject" argument1="An argument for argument's sake." />
      <add permissionName="RecursivePermissionCheck" ruleType="Open.SPF.Core.Test.TestCustomRules, Open.SPF.Core.Test, Version=1.2.1, Culture=neutral, PublicKeyToken=b4313207536550be" ruleMethod="RecursivePermissionCheck" argument1="An argument for argument's sake." />
    </customPermissionConfigurationItems>
  </appPermissionConfiguration>
  -->
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Practices.ServiceLocation" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-1.3.0.0" newVersion="1.3.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Extensions.DependencyInjection.Abstractions" publicKeyToken="adb9793829ddae60" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.1.1.0" newVersion="2.1.1.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Extensions.Primitives" publicKeyToken="adb9793829ddae60" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.1.1.0" newVersion="2.1.1.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Buffers" publicKeyToken="cc7b13ffcd2ddd51" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.3.0" newVersion="4.0.3.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Numerics.Vectors" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.1.4.0" newVersion="4.1.4.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Runtime.CompilerServices.Unsafe" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.4.1" newVersion="4.0.4.1" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
<startup><supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.6.2" /></startup></configuration>
